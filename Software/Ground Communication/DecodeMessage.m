function [Data] = DecodeMessage (file_name)
FID = fopen(file_name);
Encoded = fread(FID);

% Temperature Data
TEMP_MIN =  -88; 
TEMP_STEP = .25;
TEMP_OFFSET = 128;
TEMP_BITS = 9;
Data.temp = decode(TEMP_MIN, TEMP_STEP, Encoded(TEMP_OFFSET+1:TEMP_OFFET+TEMP_BITS+1));
% Pressure Data
PRS_MIN = 0;
PRS_STEP = .25;
PRS_OFFSET = 157;
PRS_BITS = 12;
Data.prs = decode(PRS_MIN, PRS_STEP, Encoded(PRS_OFFSET+1:PRS_OFFET+PRS_BITS+1));
% IMU Data
ACC_MAG_MIN = 0; 
ACC_MAG_STEP = .001;
ACC_MAG_OFFSET = 95;
ACC_MAG_BITS = 14;
Data.aMag = decode(ACC_MAG_MIN, ACC_MAG_STEP, Encoded(ACC_MAG_OFFSET+1:ACC_MAG_OFFET+ACC_MAG_BITS+1));

ACC_THETA_MIN = 0; 
ACC_THETA_STEP = 0.0125663706;
ACC_THETA_OFFSET = 109;
ACC_THETA_BITS = 10;
Data.aTheta = decode(ACC_THETA_MIN, ACC_THETA_STEP, Encoded(ACC_THETA_OFFSET+1:ACC_THETA_OFFET+ACC_THETA_BITS+1));

ACC_PHI_MIN = 0; 
ACC_PHI_STEP = 0.00628318531;
ACC_PHI_OFFSET = 119;
ACC_PHI_BITS = 9;
Data.aPhi = decode(ACC_PHI_MIN, ACC_PHI_STEP, Encoded(ACC_PHI_OFFSET+1:ACC_PHI_OFFET+ACC_PHI_BITS+1));
% GPS Data
ALT_MIN = -5000;
ALT_STEP = 3;
ALT_OFFSET = 0;
ALT_BITS = 14;
Data.alt = decode(ALT_MIN, ALT_STEP, Encoded(ALT_OFFSET+1:ALT_OFFET+ALT_BITS+1));

LAT_MIN = -100;
LAT_STEP = .0001;
LAT_OFFSET = 14;
LAT_BITS = 23;
Data.lat = decode(LAT_MIN, LAT_STEP, Encoded(LAT_OFFSET+1:LAT_OFFET+LAT_BITS+1));

LONG_MIN = 18; 
LONG_STEP = .0001;
LONG_OFFSET = 37;
LONG_BITS = 23;
Data.long = decode(LONG_MIN, LONG_STEP, Encoded(LONG_OFFSET+1:LONG_OFFET+LONG_BITS+1));
% Battery Data
BATT_MIN = 0;
BATT_STEP = .1;
BATT_OFFSET = 147;
BATT_BITS = 10;
Data.batt = decode(BATT_MIN, BATT_STEP, Encoded(BATT_OFFSET+1:BATT_OFFET+BATT_BITS+1));
% Velovity Data
VEL_MAG_MIN = 0;
VEL_MAG_STEP = 0.001;
VEL_MAG_OFFSET = 60;
VEL_MAG_BITS = 16;
Data.vMag = decode(VEL_MAG_MIN, VEL_MAG_STEP, Encoded(VEL_MAG_OFFSET+1:VEL_MAG_OFFET+VEL_MAG_BITS+1));

VEL_THETA_MIN = 0;
VEL_THETA_STEP = 0.0125663706;
VEL_THETA_OFFSET = 76;
VEL_THETA_BITS = 10;
Data.vTheta = decode(VEL_THETA_MIN, VEL_THETA_STEP, Encoded(VEL_THETA_OFFSET+1:VEL_THETA_OFFET+VEL_THETA_BITS+1));

VEL_PHI_MIN = 0;
VEL_PHI_STEP = 0.00628318531;
VEL_PHI_OFFSET = 86;
VEL_PHI_BITS = 9;
Data.vPhi = decode(VEL_PHI_MIN, VEL_PHI_STEP, Encoded(VEL_PHI_OFFSET+1:VEL_PHI_OFFET+VEL_PHI_BITS+1));
% Ballast Data
BALL_MIN = 0; 
BALL_STEP = .1;
BALL_OFFSET = 137;
BALL_BITS = 10;
Data.bal = decode(BALL_MIN, BALL_STEP, Encoded(BALL_OFFSET+1:BALL_OFFET+BALL_BITS+1));

% Time Data
TIME_MIN = 0; 
TIME_STEP = 1;
TIME_OFFSET = 169;
TIME_BITS = 17;
Data.time = decode(TIME_MIN, TIME_STEP, Encoded(TIME_OFFSET+1:TIME_OFFET+TIME_BITS+1));
end

function [value] = decode(min, step, input)
value = (input*step)+min;
end